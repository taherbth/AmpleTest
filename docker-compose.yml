version: '3.8'

services:
  app:
    build:
      context: .
      args:
          - APP_ENV=${APP_ENV}
      dockerfile: Dockerfile
    image: my-laravel-app
    container_name: my-laravel-app
    restart: unless-stopped
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=Link_Harvester
      - DB_USERNAME='taher'
      - DB_PASSWORD='123456'      
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379

    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - db
      - redis
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: nginx-webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - app-network

  # Database Server
  db:
    image: mysql:8.0
    container_name: laravel-db       
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_DATABASE: "Link_Harvester"
      MYSQL_USER: "taher"
      MYSQL_PASSWORD: "123456"
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        - db-data:/var/lib/mysql
    networks:
      - app-network    
       
  # Redis Server 
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
  
  # Queue Server
  queue:
    image: php:8.3-fpm
    container_name: laravel_queue
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    depends_on:
      - redis
    volumes:
      - .:/var/www
    networks:
      - app-network

networks:
  app-network:
    external: true
    driver: bridge

volumes:
  db-data: 

