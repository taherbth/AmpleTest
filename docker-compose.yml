version: '3.8'

services:
  app:
    build:
      context: .
      args:
          - APP_ENV=${APP_ENV}
      dockerfile: Dockerfile
    image: my-laravel-app
    container_name: my-laravel-app
    restart: unless-stopped
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=Link_Harvester
      - DB_USERNAME='taher'
      - DB_PASSWORD='123456'
    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - db
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: nginx-webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - app-network

  # Database Server
  db:
    image: mysql:8.0
    container_name: laravel-db       
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_DATABASE: "Link_Harvester"
      MYSQL_USER: "taher"
      MYSQL_PASSWORD: "123456"
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        - db-data:/var/lib/mysql
    networks:
      - app-network    
       
  # Redis Server   
  redis:
    image: redis:latest
    ports:
      - "6370:6379"
  # websocket   
  websocket:
    build:
        context: .
        args:
            - APP_ENV=${APP_ENV}
    environment:
        - APP_ENV=${APP_ENV}
        - CONTAINER_ROLE=websocket
    working_dir: /var/www
    volumes:
        - ./:/var/www
    ports:
        - 6001:6001
    networks:
      - app-network  
  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile-scheduler
    container_name: laravel_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data: 

